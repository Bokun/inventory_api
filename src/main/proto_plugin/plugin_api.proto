syntax = "proto3";

package io.bokun.inventory.plugin.api.grpc;

option java_multiple_files = true;
option java_package = "io.bokun.inventory.plugin.api.grpc";

import "common.proto";

service PluginApi {
    // Provide plugin definition information (what features etc this plugin supports).
    rpc GetDefinition (io.bokun.inventory.common.api.grpc.Empty) returns (PluginDefinition) {}

    // Return information about products of the remote system this plugin is connecting to (as opposed to Bokun products).
    // This call is required in order to link Bokun- and remote system-configured products together.
    rpc SearchInventoryProducts(SearchInventoryProductsRequest) returns (stream ProductDescription) {}

    // A set of product ids provided, return their availability over given date range.
    // This will return a subset of product IDs passed on via ProductAvailabilityRequest.
    rpc GetProductAvailability(ProductAvailabilityRequest) returns (stream ExternalProductId) {}
}

// Parameters used to configure supported plugin(s)
message PluginDefinition {
    string name = 1;                                                                        // name of definition
    string description = 2;                                                                 // description of definition, optional
    repeated io.bokun.inventory.common.api.grpc.ProductCategory productCategories = 3;      // Which product types does this plugin work with?
    repeated io.bokun.inventory.common.api.grpc.PluginCapability capabilities = 4;          // What does this plugin support?
    repeated PluginConfigurationParameter parameters = 5;                                   // List of parameters this plugin should be configured with
}

// Parameters used to configure supported plugin(s)
message PluginConfigurationParameter {
    string name = 1;                    // names should be unique
    io.bokun.inventory.common.api.grpc.PluginParameterDataType type = 2;
    bool required = 3;
}

// Parameters used to configure supported plugin(s)
message PluginConfigurationParameterValue {
    string name = 1;                    // refer to PluginConfigurationParameter::name
    string value = 2;                   // value for this name; null strings are not permitted by proto v3 but empty strings "" are
}

message ProductAvailabilityRequest {
    repeated PluginConfigurationParameterValue parameters = 1;       // plugin config parameters

    // Date range (boundaries included) for which you would like to get products
    io.bokun.inventory.common.api.grpc.DatePeriod range = 2;

    // How many seats/spaces/pax are required
    int64 requiredQuantity = 3;

    // A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
    repeated string externalProductIds = 4;
}

message ExternalProductId {
    string productId = 1;
}

message SearchInventoryProductsRequest {
    repeated PluginConfigurationParameterValue parameters = 1;       // plugin config parameters
    string productName = 2;
    string country = 3;             // 3 char ISO 3166-1 alpha-3, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3
    string city = 4;                // city this product is served at. Optional
}

message ProductDescription {
    string externalProductId = 1;
    string name = 2;
    string description = 3;
    repeated PricingCategory pricingCategories = 4;
    repeated io.bokun.inventory.common.api.grpc.Rate rates = 5;
    oneof openingHours {
        io.bokun.inventory.common.api.grpc.OpeningHours allYearOpeningHours = 6;
        io.bokun.inventory.common.api.grpc.SeasonalOpeningHourSet seasonalOpeningHours = 7;
    }
    io.bokun.inventory.common.api.grpc.BookingType bookingType = 8;
}

message PricingCategory {
    string id = 1;
    io.bokun.inventory.common.api.grpc.PricingCategoryType type = 2;
}
