syntax = "proto3";

package io.bokun.inventory.plugin.api.grpc;

option java_multiple_files = true;
option java_package = "io.bokun.inventory.plugin.api.grpc";

import "common.proto";

service PluginApi {
    // Provide plugin definition information
    rpc GetDefinition (io.bokun.inventory.common.api.grpc.Empty) returns (PluginDefinition) {}

    // Get available products (of specific type) over a date range, supplying product IDs of remote system
    // This will return a subset of product IDs passed on via GetAvailableProductsRequest
    rpc GetAvailableProducts(GetAvailableProductsRequest) returns (stream ExternalProductId) {}
}

// Parameters used to configure supported plugin(s)
message PluginDefinition {
    string name = 1;                                                                        // name of definition
    string description = 2;                                                                 // description of definition, optional
    repeated io.bokun.inventory.common.api.grpc.ProductCategory productCategories = 3;      // Which product types does this plugin work with?
    repeated io.bokun.inventory.common.api.grpc.PluginCapability capabilities = 4;          // What does this plugin support?
    repeated PluginConfigurationParameter parameters = 5;                                   // List of parameters this plugin should be configured with
}

// Parameters used to configure supported plugin(s)
message PluginConfigurationParameter {
    string name = 1;
    io.bokun.inventory.common.api.grpc.PluginParameterDataType type = 2;
    bool required = 3;
}

message GetAvailableProductsRequest {
    // Date range (boundaries included) for which you would like to get products
    io.bokun.inventory.common.api.grpc.DatePeriod range = 1;

    // How many seats/spaces/pax are required
    int64 requiredQuantity = 2;

    // A list of product ids on the remote end (as opposed to Bokun product counterparts)
    repeated string externalProductIds = 3;
}

message ExternalProductId {
    string productId = 1;
}
