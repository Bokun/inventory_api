syntax = "proto3";

package io.bokun.inventory.common.api.grpc;

option java_multiple_files = true;
option java_package = "io.bokun.inventory.common.api.grpc";

// to signify that a RPC call doesn't return anything or has no input parameters
message Empty {
}

message Date {
    int32 year = 1;
    int32 month = 2;
    int32 day = 3;
}

// Date period - from one day to another. Boundary conditions (exclusive or not) are defined at the context where this period is used.
message DatePeriod {
    Date from = 1;
    Date to = 2;
}

message Time {
    int32 hour = 1;
    int32 minute = 2;
}

message Price {
    string currency = 1;
    string amount = 2;              // can't use double because of precision loss. Will convert to BigDecimal when data arrives in Java
}

// Data types for PluginConfigurationParameter
enum PluginParameterDataType {
    LONG = 0;
    DOUBLE = 1;
    BOOLEAN = 2;
    STRING = 3;
}

// What kind of features does this plugin support?
enum PluginCapability {
    SUPPORTS_PRICING = 0;
    SUPPORTS_RESERVATIONS = 1;
    SUPPORTS_AVAILABILITY = 2;
}

// Supported product categories
enum ProductCategory {
    ACCOMMODATION = 0;
    ACTIVITIES = 1;
    CAR_RENTALS = 2;
    TRANSPORT = 3;
}

message Duration {
    int32 minutes = 1;
    int32 hours = 2;
    int32 days = 3;
    int32 weeks = 4;
}

message OpeningHoursTimeInterval {
    string openFrom = 1;                // Format: HH:mm
    int32 openForHours = 2;             // For how many hours open since openFrom
    int32 openForMinutes = 3;           // For how many minutes open since openFrom. Must be within [0..59]
    Duration duration = 4;              // Specifies the frequency between start times within the interval. For example if duration is 20 minutes, the tour starts every 20 minutes.
}

message OpeningHoursWeekday {
    bool open24Hours = 1;                                   // whether this is open 24/7. If so, other fields are irrelevant.
    repeated OpeningHoursTimeInterval timeIntervals = 2;    // only used if open24Hours is false. Time intervals that are open for this weekday
}

message OpeningHours {
    OpeningHoursWeekday monday = 1;         // Opening hours for Mondays
    OpeningHoursWeekday tuesday = 2;        // Tuesdays, and so on and so forth
    OpeningHoursWeekday wednesday = 3;
    OpeningHoursWeekday thursday = 4;
    OpeningHoursWeekday friday = 5;
    OpeningHoursWeekday saturday = 6;
    OpeningHoursWeekday sunday = 7;
}

message SeasonalOpeningHourSet {
    repeated SeasonalOpeningHours seasonalOpeningHours = 1;
}

message SeasonalOpeningHours {
    int32 startMonth = 1;
    int32 startDay = 2;
    int32 endMonth = 3;
    int32 endDay = 4;
    OpeningHours openingHours = 5;
}

enum BookingType {
    DATE = 0;
    DATE_AND_TIME = 1;
    PASS = 2;
}

message Rate {
    string id = 1;
    string name = 2;
    string description = 3;
}

enum PricingCategoryType {
    ADULT = 0;
    CHILD = 1;
    TEENAGER = 2;
    INFANT = 3;
    SENIOR = 4;
    STUDENT = 5;
    MILITARY = 6;
    OTHER = 7;
}

// Parameters used to configure supported plugin(s)
message PluginConfigurationParameter {
    string name = 1;                        // names should be unique per plugin
    PluginParameterDataType type = 2;
    bool required = 3;
}

message ProductDescription {
    string id = 1;                                      // product id
    string name = 2;                                    // product name
    string description = 3;                             // product description, optional
    repeated PricingCategory pricingCategories = 4;
    repeated Rate rates = 5;
    oneof openingHours {
        OpeningHours allYearOpeningHours = 6;
        SeasonalOpeningHourSet seasonalOpeningHours = 7;
    }
    BookingType bookingType = 8;
}

message PricingCategory {
    string id = 1;
    PricingCategoryType type = 2;
}
